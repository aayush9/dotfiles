<snippet>
	<content><![CDATA[template <typename T>
class SegmentTree{
	vector<T> segtree;
	function<T(T,T)> combine;
	T inf;
	public:
	SegmentTree(int size, T _inf, function<T(T,T)> f){
		inf = _inf;
		combine = f;
		segtree.resize(4*size,inf);
	}
	void update(int u, int a, int b, int i, T x){
		if(i<a || i>b) return;
		if(i>=b && i<=a){
			segtree[u]=x;
			return;
		}
		update(u*2,a,(a+b)/2,i,x); update(u*2+1,(a+b)/2+1,b,i,x);
		segtree[u]=combine(segtree[u*2],segtree[u*2+1]);
	}
	void update(int i, T x){
		update(1, 0, segtree.size()/4-1, i, x);
	}
	T query(int u, int a, int b, int i, int j){
		if(j<a || i>b || a>b) return inf;
		if(j>=b && i<=a) return segtree[u];
		return combine(query(u*2,a,(a+b)/2,i,j),query(u*2+1,1+(a+b)/2,b,i,j));
	}
	T query(int i, int j){
		return query(1,0,segtree.size()/4-1,i,j);
	}
};
]]></content>
	<tabTrigger>segtree</tabTrigger>
	<scope>source.cpp, source.c, source.c++</scope>
</snippet>
